"""
Восстановите строку по её коду и беспрефиксному коду символов. 

В первой строке входного файла заданы два целых числа k и l через пробел — 
количество различных букв, встречающихся в строке, и размер получившейся 
закодированной строки, соответственно. В следующих k строках записаны коды 
букв в формате "letter: code". Ни один код не является префиксом другого. 
Буквы могут быть перечислены в любом порядке. В качестве букв могут встречаться 
лишь строчные буквы латинского алфавита; каждая из этих букв встречается в 
строке хотя бы один раз. Наконец, в последней строке записана закодированная 
строка. Исходная строка и коды всех букв непусты. Заданный код таков, что 
закодированная строка имеет минимальный возможный размер.

В первой строке выходного файла выведите строку ss. Она должна состоять из 
строчных букв латинского алфавита. Гарантируется, что длина правильного ответа 
не превосходит 104104 символов.

Sample Input 1:
1 1
a: 0
0

Sample Output 1:
a

Sample Input 2:
4 14
a: 0
b: 10
c: 110
d: 111
01001100100111

Sample Output 2:
abacabad
"""


def huffman_decode(encoded_string, code_map):
    code = decoded_string = ''
    for i in encoded_string:
        code += i
        if code in code_map:
            decoded_string += code_map[code]
            code = ''
    return decoded_string


def main():
    total, length = [int(i) for i in input().split()]
    codes = {}
    for i in range(total):
        symbol,  code = input().split()
        codes[code] = symbol[:-1]
    print(huffman_decode(input(), codes))


if __name__ == '__main__':
    main()
